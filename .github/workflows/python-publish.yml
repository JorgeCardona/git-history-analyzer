# This workflow uploads a Python package using Twine when a release is created.
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# Note: This workflow uses actions that are not certified by GitHub.
# They are provided by a third party and are governed by separate terms of service, privacy policy, and support documentation.

name: Upload Python Package  # The name of the GitHub Actions workflow

on:
  release:  # Trigger the workflow when a release is published
    types: [published]  
  workflow_dispatch:  # Allows manual triggering of the workflow from the Actions tab in GitHub

permissions:
  contents: read  # Grants read-only access to the repository contents for this workflow

jobs:
  deploy:  # Defines the 'deploy' job that performs the deployment actions

    runs-on: ubuntu-latest  # Specifies the environment to run this job (latest Ubuntu)

    steps:
      - uses: actions/checkout@v4  # Checks out the repository code from GitHub

      - name: Set up Python  # Sets up the Python environment
        uses: actions/setup-python@v3  # Action to set up Python
        with:
          python-version: '3.11.7'  # Specifies the exact Python version to be used

      - name: Install dependencies  # Installs the necessary Python dependencies to build the package
        run: |
          python -m pip install --upgrade pip setuptools wheel twine  # # Upgrades pip to the latest version Installs the 'build' package for creating distribution files

      - name: Set version based on Git tag  # Dynamically sets the package version based on the latest Git tag
        id: get_version  # Step ID for referencing outputs later
        run: echo "PACKAGE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV  # Retrieves the latest Git tag and sets it as an environment variable

      - name: Build package  # Builds the Python package
        run: python setup.py sdist bdist_wheel  # Uses setup.py to create source and wheel distributions

      - name: Publish package  # Publishes the built package to PyPI
        uses: pypa/gh-action-pypi-publish@v1  # Uses the latest version of the PyPI publish action
        with:
          user: __token__  # Uses PyPI authentication token for the user
          password: ${{ secrets.PYPI_API_TOKEN }}  # Retrieves the PyPI API token from GitHub Secrets for authentication
