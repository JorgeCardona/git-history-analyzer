name: Publish Git History Analyzer Python Package  # The name of the GitHub Actions workflow

on:
  release:  # Trigger the workflow when a release is published
    types: [published]
  workflow_dispatch:  # Allows manual triggering of the workflow from the Actions tab in GitHub

permissions:
  contents: read  # Grants read-only access to the repository contents for this workflow

jobs:
  build:  # Job for building the package
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.10.13, 3.11.7, 3.12.3]  # Define specific Python versions for building

    steps:
      - uses: actions/checkout@v4  # Checks out the repository code from GitHub

      - name: Set up Python  # Sets up the Python environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}  # Uses the specific Python version from the matrix

      - name: Upgrade pip  # Upgrades pip to the latest version
        run: python -m pip install --upgrade pip

      - name: Install setuptools  # Installs setuptools package
        run: pip install setuptools

      - name: Install wheel  # Installs wheel package
        run: pip install wheel

      - name: Build package  # Builds the Python package
        run: python setup.py sdist bdist_wheel

      - name: Zip build directory  # Zips the build directory
        run: zip -r build.zip build/  # Creates a zip file of the build directory

      - name: Upload build artifact  # Uploads the zipped build artifact for later jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-package  # Name of the artifact
          path: build.zip  # Path to the zipped build file

  publish:  # Job for publishing the package
    needs: build  # This job depends on the successful completion of the 'build' job
    runs-on: ubuntu-latest  # This job runs on the Ubuntu environment

    steps:
      - name: Download package artifact  # Downloads the zipped package from the previous job
        uses: actions/download-artifact@v3
        with:
          name: python-package  # Name of the artifact to download

      - name: Unzip package  # Unzips the downloaded package
        run: unzip python-package.zip  # Unzips the build package

      - name: Publish package  # Publishes the built package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__  # Uses PyPI authentication token for the user
          password: ${{ secrets.PYPI_API_TOKEN }}  # Retrieves the PyPI API token from GitHub Secrets for authentication
          packages_dir: ./build  # Specifies the directory of the unzipped package
